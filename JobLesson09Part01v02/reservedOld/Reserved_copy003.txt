using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace JobLesson09Part01v02
{
    internal class Program
    {
        //Требуется создать консольный файловый менеджер начального уровня,
        //который покрывает минимальный набор функционала по работе с файлами.
        //1. Просмотр файловой структуры
        //2. Поддержка копирование файлов, каталогов
        //3. Поддержка удаление файлов, каталогов
        //4. Получение информации о размерах, системных атрибутов файла, каталога
        //5. Вывод файловой структуры должен быть постраничным
        //6. В конфигурационном файле должна быть настройка вывода количества
        //элементов на страницу
        //7. При выходе должно сохраняться, последнее состояние
        //8. Должны быть комментарии в коде
        //9. Должна быть документация к проекту в формате md
        //10. Приложение должно обрабатывать непредвиденные ситуации(не падать)
        //11. При успешном выполнение предыдущих пунктов – реализовать сохранение ошибки
        //в текстовом файле в каталоге errors/random_name_exception.txt
        //12. При успешном выполнение предыдущих пунктов – реализовать движение по
        //истории команд(стрелочки вверх, вниз)
        static void Main()
        {
            //1. Просмотр файловой структуры
            //Включает:
            //Отображение дерева категорий и дерева файлов
            TreeOfCategory();
            Console.ReadLine();

        }
        static string TreeOfCategory()
        {
            string structDirName = @"F:\CategoryForTree";
            DirectoryInfo dirInfo = new DirectoryInfo(structDirName);
            string[] dirs = Directory.GetDirectories(structDirName);
            Console.WriteLine("Структура категорий:"+ dirInfo.Name);
            Console.WriteLine(structDirName);
            File.AppendAllText("Structure.txt", "Структура категорий:" + Environment.NewLine + structDirName);

            if (Directory.Exists(structDirName))
            {

                for (int i = 0; i < dirs.Length; i++)
                {
                    
                    Console.WriteLine("+" + dirs[i]);
                    File.AppendAllText("Structure.txt", Environment.NewLine + "+" + dirs[i]);

                    if (Directory.Exists(dirs[i]))
                    {
                        string[] subDirs = Directory.GetDirectories(dirs[i]);
                        for (int j = 0; j < subDirs.Length; j++)
                        {
                            Console.WriteLine("¦+" + subDirs[j]);
                            File.AppendAllText("Structure.txt", Environment.NewLine + "¦+" + subDirs[j]);
                            if (Directory.Exists(subDirs[j]))
                            {
                                string[] subSubDirsFiles = Directory.GetDirectories(subDirs[j]);
                                for (int l = 0; l < subSubDirsFiles.Length; l++)
                                {
                                    Console.WriteLine("¦¦+" + subSubDirsFiles[l]);
                                    File.AppendAllText("Structure.txt", Environment.NewLine + "¦¦+" + subSubDirsFiles[l]);
                                }

                            }
                        }
                    }
                }
            }
            return structDirName;
        }
    }
}
